var __wpo = {"assets":{"main":["/cryptomedic/offline/static","/cryptomedic/offline/static/img","/cryptomedic/offline/static/img/bangladesh.svg","/cryptomedic/offline/static/img/boolean-false.gif","/cryptomedic/offline/static/img/boolean-true.gif","/cryptomedic/offline/static/img/bug.jpeg","/cryptomedic/offline/static/img/consultOfDay.gif","/cryptomedic/offline/static/img/file_not_defined.png","/cryptomedic/offline/static/img/go.gif","/cryptomedic/offline/static/img/home.gif","/cryptomedic/offline/static/img/locked.gif","/cryptomedic/offline/static/img/logout.gif","/cryptomedic/offline/static/img/patient.gif","/cryptomedic/offline/static/img/patientsSearch.gif","/cryptomedic/offline/static/img/reports.gif","/cryptomedic/offline/static/img/stats_bmi-f.jpg","/cryptomedic/offline/static/img/stats_bmi-m.jpg","/cryptomedic/offline/static/img/stats_bmi-null.jpg","/cryptomedic/offline/static/img/stats_height-f.jpg","/cryptomedic/offline/static/img/stats_height-m.jpg","/cryptomedic/offline/static/img/stats_height-null.jpg","/cryptomedic/offline/static/img/stats_weight-f.jpg","/cryptomedic/offline/static/img/stats_weight-m.jpg","/cryptomedic/offline/static/img/stats_weight-null.jpg","/cryptomedic/offline/static/img/stats_wh-f.jpg","/cryptomedic/offline/static/img/stats_wh-m.jpg","/cryptomedic/offline/static/img/stats_wh-null.jpg","/cryptomedic/offline/static/img/sync","/cryptomedic/offline/static/img/sync.png","/cryptomedic/offline/static/img/sync/download.png","/cryptomedic/offline/static/img/sync/off.png","/cryptomedic/offline/static/img/sync/ok.png","/cryptomedic/offline/static/img/sync/unknown.png","/cryptomedic/offline/static/img/sync/upload.png","/cryptomedic/offline/static/img/unlock.gif","/cryptomedic/offline/static/img/users.png","/cryptomedic/offline/static/img/waiting.gif","/cryptomedic/offline/static/js","/cryptomedic/offline/static/js/application.js","/cryptomedic/offline/static/js/bugreporting.js","/cryptomedic/offline/static/js/calculations.js","/cryptomedic/offline/static/js/ctrl_allgraphics.js","/cryptomedic/offline/static/js/ctrl_file_appointment.js","/cryptomedic/offline/static/js/ctrl_file_bill.js","/cryptomedic/offline/static/js/ctrl_folder.js","/cryptomedic/offline/static/js/ctrl_graphic.js","/cryptomedic/offline/static/js/ctrl_home.js","/cryptomedic/offline/static/js/ctrl_login.js","/cryptomedic/offline/static/js/ctrl_picture.js","/cryptomedic/offline/static/js/ctrl_reports.js","/cryptomedic/offline/static/js/ctrl_search.js","/cryptomedic/offline/static/js/ctrl_users.js","/cryptomedic/offline/static/js/database.js","/cryptomedic/offline/static/js/html2canvas.js","/cryptomedic/offline/static/js/myfetch.js","/cryptomedic/offline/static/js/service_backend.js","/cryptomedic/offline/static/js/start.js","/cryptomedic/offline/static/upgrade.html","/cryptomedic/offline/static/worker","/cryptomedic/offline/static/worker/worker.js","/cryptomedic/offline/bower_components/dexie/addons/Dexie.Observable/Dexie.Observable.js","/cryptomedic/offline/bower_components/dexie/addons/Dexie.Syncable/Dexie.Syncable.js","/cryptomedic/offline/bower_components/dexie/addons/Dexie.Syncable/Dexie.Syncable.SyncProtocolAPI.js","/cryptomedic/offline/bower_components/dexie/addons/Dexie.Yield/Dexie.Yield.js","/cryptomedic/offline/bower_components/dexie/dist/latest/Dexie.js","/cryptomedic/offline/bower_components/dexie/dist/latest/Dexie.min.js","/cryptomedic/offline/img/go.gif","/cryptomedic/offline/img/consultOfDay.gif","/cryptomedic/offline/img/patient.gif","/cryptomedic/offline/img/boolean-false.gif","/cryptomedic/offline/img/boolean-true.gif","/cryptomedic/offline/img/ui-icons_ef8c08_256x240.png","/cryptomedic/offline/fonts/glyphicons-halflings-regular.eot","/cryptomedic/offline/img/locked.gif","/cryptomedic/offline/img/unlock.gif","/cryptomedic/offline/fonts/glyphicons-halflings-regular.ttf","/cryptomedic/offline/fonts/glyphicons-halflings-regular.woff","/cryptomedic/offline/fonts/glyphicons-halflings-regular.woff2","/cryptomedic/offline/img/cal.gif","/cryptomedic/offline/img/error.png","/cryptomedic/offline/img/waiting.gif","/cryptomedic/offline/img/home.gif","/cryptomedic/offline/img/patientsSearch.gif","/cryptomedic/offline/img/glyphicons-halflings-regular.svg","/cryptomedic/offline/img/animated-overlay.gif","/cryptomedic/offline/img/ui-bg_diagonals-thick_18_b81900_40x40.png","/cryptomedic/offline/img/ui-bg_diagonals-thick_20_666666_40x40.png","/cryptomedic/offline/img/ui-bg_flat_10_000000_40x100.png","/cryptomedic/offline/img/ui-bg_glass_100_f6f6f6_1x400.png","/cryptomedic/offline/img/ui-bg_glass_100_fdf5ce_1x400.png","/cryptomedic/offline/img/ui-bg_glass_65_ffffff_1x400.png","/cryptomedic/offline/img/ui-bg_gloss-wave_35_f6a828_500x100.png","/cryptomedic/offline/img/ui-bg_highlight-soft_100_eeeeee_1x100.png","/cryptomedic/offline/img/ui-bg_highlight-soft_75_ffe45c_1x100.png","/cryptomedic/offline/img/ui-icons_222222_256x240.png","/cryptomedic/offline/img/ui-icons_228ef1_256x240.png","/cryptomedic/offline/img/ui-icons_ffd27a_256x240.png","/cryptomedic/offline/img/ui-icons_ffffff_256x240.png","/cryptomedic/offline/bundle-fb62a9600b4c6bcce648.js","/cryptomedic/offline/"],"additional":[],"optional":[]},"strategy":"all","version":"2/13/2016, 8:52:51 PM","name":"webpack-offline","relativePaths":false};

!function(e){function n(o){if(t[o])return t[o].exports;var r=t[o]={exports:{},id:o,loaded:!1};return e[o].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n,t){"use strict";function o(e){function n(){s.additional.length&&("changed"===i?o():t("additional"))}function t(e){return caches.open(f).then(function(n){return n.addAll(s[e]).then(function(){console.groupCollapsed("[SW]:","Cached assets: "+e),s[e].forEach(function(e){console.log("Asset:",e)}),console.groupEnd()})})}function o(){var e=void 0;return caches.open(f).then(function(n){return e=n,n.keys()}).then(function(n){var t=n.map(function(e){return new URL(e.url).pathname}),o=s.additional.filter(function(e){return-1===t.indexOf(e)});o.length&&(console.group("[SW]:","Caching changed assets"),o.map(function(e){return console.log("Asset:",e),new Request(e)}).map(function(n){return fetch(n).then(function(t){return e.put(n,t)})}),console.groupEnd())})}function r(){return caches.keys().then(function(e){return Promise.all(e.map(function(e){return e!==f&&0===e.indexOf(l)?(console.log("[SW]:","Delete cache:",e),caches["delete"](e)):void 0}))})}function a(){Object.keys(s).forEach(function(e){s[e]=s[e].map(function(e){var n=new URL(c.origin+c.pathname+e);return n.pathname})})}var c=new URL(registration.scope),i=e.strategy,s=e.assets,u={all:e.version,changed:"static",hash:e.hash},l=e.name,h=u[i],f=l+":"+h;e.relativePaths&&a();var p=[].concat(s.main,s.additional,s.optional);self.addEventListener("install",function(e){console.log("[SW]:","Install event");var o=t("main").then(n);e.waitUntil(o)}),self.addEventListener("activate",function(e){console.log("[SW]:","Activate event");var n=r();"changed"===i&&(n=n.then(deleteChanged)),e.waitUntil(n.then(function(){return self.clients&&self.clients.claim?self.clients.claim():void 0}))}),self.addEventListener("fetch",function(e){var n=new URL(e.request.url);if("GET"===e.request.method&&n.origin===location.origin&&-1!==p.indexOf(n.pathname)){if(-1!==s.main.indexOf(n.pathname))return void e.respondWith(caches.match(e.request,{cacheName:f}));var t=caches.match(e.request,{cacheName:f}).then(function(t){return t?t:fetch(e.request.clone()).then(function(t){if(!t||200!==t.status||"basic"!==t.type)return t;var o=t.clone();return caches.open(f).then(function(n){return n.put(e.request,o)}).then(function(){console.log("[SW]:","Cache asset: "+n.pathname)}),t})});e.respondWith(t)}})}t(2),o(__wpo),e.exports=t(1)},function(e,n){},function(e,n,t){"use strict";e.exports=t(3)},function(e,n){Cache.prototype.add||(Cache.prototype.add=function(e){return this.addAll([e])}),Cache.prototype.addAll||(Cache.prototype.addAll=function(e){function n(e){this.name="NetworkError",this.code=19,this.message=e}var t=this;return n.prototype=Object.create(Error.prototype),Promise.resolve().then(function(){if(arguments.length<1)throw new TypeError;return e=e.map(function(e){return e instanceof Request?e:String(e)}),Promise.all(e.map(function(e){"string"==typeof e&&(e=new Request(e));var t=new URL(e.url).protocol;if("http:"!==t&&"https:"!==t)throw new n("Invalid scheme");return fetch(e.clone())}))}).then(function(n){return Promise.all(n.map(function(n,o){return t.put(e[o],n)}))}).then(function(){})})}]);