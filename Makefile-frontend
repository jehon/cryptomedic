
FRONTEND_ROOT = src
FRONTEND_DEPENDENCIES_MARK = node_modules/.dependencies
FRONTEND_PUBLISHED = www/built
FRONTEND_BUILT_MARK = $(FRONTEND_PUBLISHED)/.built
FRONTEND_BUILD_TMP = legacy/built

frontend: clear clean-files dc-build dc-up frontend-dump frontend-dependencies frontend-lint frontend-build frontend-test ok

.PHONY: frontend-clean
clean: frontend-clean
frontend-clean: frontend-clean-files
	rm -fr node_modules
	rm -fr $(FRONTEND_DEPENDENCIES_MARK)

	@echo "!! Removed dependencies, so husky (commit) will not work anymore. Please make dependencies-node to enable it again"

.PHONY: frontend-clean-files
clean-files: frontend-clean-files
frontend-clean-files:
	rm -fr $(TMP)/frontend

	rm -f www/index.html
	rm -fr $(FRONTEND_PUBLISHED)
	rm -fr $(FRONTEND_BUILD_TMP)

	rm -fr $(FRONTEND_BUILT_MARK)

.PHONY: frontend-dump
dump: frontend-dump
frontend-dump:
	@echo ""
	@echo "****************"
	@echo "*** Frontend ***"
	@echo ""
	@echo "FRONTEND_ROOT:                  $(FRONTEND_ROOT)"
	@echo "FRONTEND_DEPENDENCIES_MARK:     $(FRONTEND_DEPENDENCIES_MARK)"
	@echo "FRONTEND_PUBLISHED:             $(FRONTEND_PUBLISHED)"
	@echo "FRONTEND_BUILT_MARK:            $(FRONTEND_BUILT_MARK)"
	@echo "FRONTEND_BUILD_TMP:             $(FRONTEND_BUILD_TMP)"
	@echo "NodeJS:                         $(shell bin/cr-node --version 2>&1 )"
	@echo "NPM:                            $(shell bin/cr-npm --version 2>&1 )"

.PHONY: frontend-dependencies
dependencies: frontend-dependencies
frontend-dependencies: $(FRONTEND_DEPENDENCIES_MARK)
$(FRONTEND_DEPENDENCIES_MARK): package-lock.json
	bin/cr-npm ci

	@mkdir -p "$(dir $@)"
	@touch "$@"

package-lock.json: package.json
	bin/cr-npm install

	@touch "$@"

.PHONY: frontend-lint
lint: frontend-lint
frontend-lint: frontend-lint-es frontend-lint-css frontend-lint-html
	bin/cr-node node_modules/.bin/prettier --check .

.PHONY: frontend-lint-es
frontend-lint-es: $(FRONTEND_DEPENDENCIES_MARK)
	bin/cr-node node_modules/.bin/eslint --ext .js,.ts,.tsx .

.PHONY: frontend-lint-css
frontend-lint-css: $(FRONTEND_DEPENDENCIES_MARK)
	bin/cr-node node_modules/.bin/stylelint src/**/*.css legacy/**/*.css

.PHONY: frontend-lint-html
frontend-lint-html: $(FRONTEND_DEPENDENCIES_MARK)
	bin/cr-node node_modules/.bin/htmlhint src/**/*.html legacy/**/*.html tests/**/*.html --format=compact

.PHONY: frontend-build
build: frontend-build
frontend-build: $(FRONTEND_BUILT_MARK)
# We need to depend on axios-mock-adapter.js, because otherwise, this will force a rebuild due to the recursive dependencies
$(FRONTEND_BUILT_MARK): \
		$(FRONTEND_DEPENDENCIES_MARK) \
		$(shell find legacy/app-old/ ) \
		$(shell find legacy/app-static/ ) \
		$(shell find src/ ) \
		webpack.config.js  \
		$(FRONTEND_BUILD_TMP)/axios.js \
		$(FRONTEND_BUILD_TMP)/axios-mock-adapter.js \
		$(FRONTEND_BUILD_TMP)/platform.js \
		$(FRONTEND_PUBLISHED)/.htaccess

# TODO: should not be here... (need rework of getHTMLNameOfClass)
	CRYPTOMEDIC_DEV=true bin/cr-node node_modules/.bin/webpack

	@mkdir -p "$(dir $@)"
	@touch "$@"

dev: frontend-build-dev-server
.PHONY: frontend-build-dev-server
frontend-build-dev-server: \
		$(FRONTEND_DEPENDENCIES_MARK) \
		$(shell find legacy/app-old/ ) \
		$(shell find legacy/app-static/ ) \
		$(shell find src/ ) \
		webpack.config.js  \
		$(FRONTEND_BUILD_TMP)/axios.js \
		$(FRONTEND_BUILD_TMP)/axios-mock-adapter.js \
		$(FRONTEND_BUILD_TMP)/platform.js \
		$(FRONTEND_PUBLISHED)/.htaccess

	@echo "Open http://localhost:8080/"
	CRYPTOMEDIC_DEV=true bin/cr-node node_modules/.bin/webpack serve

$(FRONTEND_PUBLISHED)/.htaccess: src/build.htaccess
	@mkdir -p "$(dir $@)"
	cp "$<" "$@"
	@touch "$@"

# Dependencies are used in the build !
$(FRONTEND_BUILD_TMP)/axios.js: node_modules/axios/dist/axios.js $(FRONTEND_DEPENDENCIES_MARK)
# --source-maps inline 
	bin/cr-node node_modules/.bin/babel --out-file="$@" --plugins=transform-commonjs "$<"

# Dependencies are used in the build !
$(FRONTEND_BUILD_TMP)/axios-mock-adapter.js: node_modules/axios-mock-adapter/dist/axios-mock-adapter.js $(FRONTEND_DEPENDENCIES_MARK)
# --source-maps inline 
	bin/cr-node node_modules/.bin/babel --out-file="$@" --plugins=transform-commonjs "$<"
	sed -i 's/from "axios";/from ".\/axios.js";/' $@

# Dependencies are used in the build !
$(FRONTEND_BUILD_TMP)/platform.js: node_modules/platform/platform.js $(FRONTEND_DEPENDENCIES_MARK)
# --source-maps inline 
	bin/cr-node node_modules/.bin/babel --out-file="$@" --plugins=transform-commonjs "$<"

.PHONY: build-on-change
build-on-change: $(FRONTEND_DEPENDENCIES_MARK)
	multitail \
		-cT ANSI \
		--mark-interval "60" \
		-l "bin/cr-node node_modules/.bin/webpack --watch"

		# -s 2 -sn 2,1 : two columns

.PHONY: frontend-test
test: frontend-test
frontend-test: frontend-test-legacy frontend-test-new

frontend-test-new: $(FRONTEND_DEPENDENCIES_MARK)
	bin/cr-node node_modules/.bin/jest

frontend-test-legacy: $(FRONTEND_DEPENDENCIES_MARK) \
		$(FRONTEND_BUILD_TMP)/axios.js \
		$(FRONTEND_BUILD_TMP)/axios-mock-adapter.js \
		$(FRONTEND_BUILD_TMP)/platform.js \

	mkdir -p $(FRONTEND_BUILD_TMP)/js
	bin/cr-node node_modules/.bin/karma start tests/unitjs/karma.conf.js --single-run

frontend-test-legacy-continuously:
	bin/cr-node node_modules/.bin/karma start tests/unitjs/karma.conf.js

.PHONY: frontend-update-references
update: frontend-update-references
frontend-update-references: $(FRONTEND_BUILT_MARK)

migration-status: clear
	@echo "********** In legacy folders ******************"
	@find src -name "*.js" -exec echo "** To: {}" ";" -exec grep --files-with-matches --recursive --fixed-strings "{}" legacy/ tests/unitjs/ src/ ";" | jh-tag-stdin "to-js"
	@echo ""

	@echo "********** In src folders ******************"

	@grep --recursive --include "*.js" --fixed-strings "/../legacy/" src/ | jh-tag-stdin "warn"
	@echo ""

	@grep --files-with-matches --recursive --exclude "*.js" --fixed-strings "/../legacy/" src/ | jh-tag-stdin "ko:deps"
	@echo ""
