
import '../components/x-patient-by-reference.js';

import { createElementsFromHTML, createElementWithObject, createElementWithTag, defineCustomElement } from '../../js/custom-element.js';
import { toAttributeCase } from '../../js/string-utils.js';
import { actions, API_VERSION, icons, messages } from '../../config.js';

import XPatientByReference from '../components/x-patient-by-reference.js';
import XGroupPanel from '../render/x-group-panel.js';
import XPanel from '../render/x-panel.js';
import XButtons from '../render/x-buttons.js';
import XButton from '../render/x-button.js';
import XRestricted from '../funcs/x-restricted.js';

import { getRouteToCreateReference } from '../../js/router.js';
import XMessage from '../render/x-message.js';

/**
 * @param {object} options to generate the XGroupPanel
 * @param {string} options.title - at top
 * @param {string?} options.id - for testing
 * @param {string?} options.versalIcon - to explain
 * @param {string} options.html - to explain
 * @param {string} options.toRoute - where to go when clicking on the button
 * @param {string?} options.buttonText - to explain
 * @param {string?} options.toLocation - location on click
 * @returns {XGroupPanel} with the content
 */
function createMenu({ title, id = toAttributeCase(title), versalIcon = '', html, toRoute = '', toLocation = '', buttonText = title }) {
    return createElementWithObject(XGroupPanel,
        {
            id: id ? id : toAttributeCase(title),
            title
        },
        [
            versalIcon ? createElementWithTag('img', { slot: 'versal', src: versalIcon }) : null,
            ...createElementsFromHTML(`<div style="flex-grow: 1" white>${html}</div>`),
            createElementWithObject(XButtons, {}, [
                createElementWithObject(XButton,
                    {
                        action: actions.move,
                        'to-route': toRoute,
                        'to-location': toLocation
                    }
                    , buttonText)
            ])
        ]);
}

/**
 *
 */
export default class XPageHome extends HTMLElement {
    constructor() {
        super();
        this.append(
            createElementWithTag('style', {}, `
    .grid {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-content: stretch;
    }

    .grid > * {
        min-height: 200px;

        flex-basis: 200px;
        flex-grow: 1;
        flex-shrink: 0;

        margin: 20px;
    }

    .grid x-group-panel > img[slot=versal] {
        width: 40px;
    }

    .grid > x-restricted > * {
        flex-grow: 1;
    }
`
            ),
            createElementWithObject(XMessage, { level: messages.info }, createElementsFromHTML(`<div>
Dear user,<br><br>

The menu is currently changing. Top button will dissapear progressively. They will be replaced by
links on this home page. This is done to ease usage of mobile.<br><br>

Thanks for your understanding.<br><br>

Jean
</div>`)),

            // createElementWithObject()
            createElementWithObject(XPanel, { full: true }, [
                ...createElementsFromHTML('<h1 id="page_home" class="text - center"><img src="/static/img/home.gif">Home</h1>'),

                createElementWithTag('div', { class: 'grid' }, [
                    createElementWithObject(XPatientByReference),

                    // @ts-ignore
                    createMenu({
                        title: 'Create a reference',
                        id: 'autogenerate-reference',
                        versalIcon: icons.patient,
                        html: 'Create a patient with an <b>autogenerated</b> reference. Auto-generated references start at 10.000. Reference year will be asked on next page.',
                        toRoute: getRouteToCreateReference()
                    }),

                    // @ts-ignore
                    createMenu({
                        title: 'Bug reporting',
                        versalIcon: '/static/img/bug.jpeg',
                        html: `
If you find a bug, please email to jeanhonlet@gmail.com.<br>
Thanks
                    `,
                        toLocation: 'mailto:jeanhonlet@gmail.com?subject=Cryptomedic%20bug:'
                    }),

                    createElementWithObject(XRestricted, { 'restricted-by': 'price.edit' }, [
                        // @ts-ignore
                        createMenu({
                            title: 'Prices',
                            id: 'menu_prices',
                            versalIcon: '/static/img/prices.png',
                            html: 'Manage the various prices',
                            toRoute: '/prices'
                        })
                    ]),

                    createElementWithObject(XRestricted, { 'restricted-by': 'admin.securityMatrix' }, [
                        // @ts-ignore
                        createMenu({
                            title: 'View matrix',
                            versalIcon: '/static/img/matrix.png',
                            html: 'List of rights',
                            toLocation: `/api/${API_VERSION}/admin/securityMatrix`
                        })
                    ])
                ])
            ])
        );
    }
}

defineCustomElement(XPageHome);
