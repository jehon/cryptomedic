#!/usr/bin/env bash

set -o errexit

VERSION="$1"
if [ -z "$VERSION" ]; then
    echo "Specify version as [1]" >&2
    exit 1
fi

export DEBIAN_FRONTEND=noninteractive

# See https://php.watch/articles/install-php81-ubuntu-debian
# Alternative: https://www.cloudbooklet.com/how-to-install-or-upgrade-php-8-1-on-debian/

#
# Configure the repository
#
RELEASE="$( lsb_release -sc )"
echo "RELEASE: $RELEASE"
RELEASE="bullseye"
echo "Overriden release: $RELEASE"

# To link our config into VERSION config
mkdir -p /etc/php
ln -sf /etc/php/current "/etc/php/${VERSION}"

echo "deb [trusted=yes] https://packages.sury.org/php/ $RELEASE main" > /etc/apt/sources.list.d/php.list

apt update --quiet --yes

# Install php
apt install --quiet --yes \
    "php${VERSION}-common" \
    "php${VERSION}-pdo-mysql" \
    "php${VERSION}-cli" \
    "php${VERSION}-curl" \
    "php${VERSION}-gd" \
    "php${VERSION}-mbstring" \
    "php${VERSION}-xml" \
    "php${VERSION}-xdebug" \
    "libapache2-mod-php${VERSION}"

# && { \
# echo "xdebug.mode=debug"; \
# } > /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini;
# && echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
# && echo "xdebug.remote_autostart=off" >> /usr/local/etc/php/conf.d/xdebug.ini

# Install composer.phar at /composer.phar (will be used through bin/cr-composer proxy)
( cd / && curl --silent --show-error https://getcomposer.org/installer | php )
