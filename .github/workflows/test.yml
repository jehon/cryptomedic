on:
  push:
    # branches:
    # - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "10 0 * * *"

# Thanks to https://stackoverflow.com/a/72408109/1954789
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  NO_CLEAR: yes

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4

      # https://github.com/actions/setup-node
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - run: ./setup.sh

      - run: make build

      - name: Upload built
        uses: actions/upload-artifact@v4
        # Include all generated files
        with:
          name: deploy
          path: |
            .ovhconfig
            www

  tests-unit:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs:
      - build
    strategy:
      # Do not stop the rest of the matrix in case of failure
      fail-fast: false
      matrix:
        target:
          - dump
          - lint
          - frontend-test
          - backend-test

    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4

      # https://github.com/actions/setup-node
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - uses: actions/download-artifact@v4
        with:
          name: deploy
          path: .

      - run: make github

      - run: make dependencies

      - run: make "${{ matrix.target }}"
          
  tests-e2e:
    needs: 
      - build
    strategy:
      fail-fast: false
      matrix:
        flavor:
          - desktop
          - mobile
          - playwright
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      # https://github.com/marketplace/actions/setup-chrome
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - uses: actions/download-artifact@v4
        with:
          name: deploy
          path: .

      - run: ./setup.sh

      - run: make github

      - run: make dc-build

      - run: make start

      - run: make dependencies

      - run: make integration-test-${{ matrix.flavor }}-run

      - run: make integration-test-${{ matrix.flavor }}-styles

      - name: Upload styles
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-${{ matrix.flavor }}
          path: tmp/integration/${{ matrix.flavor }}

  valid:
    # placeholder for validation of PR
    needs: 
      - tests-unit
      - tests-e2e
    runs-on: ubuntu-latest
    steps:
      - run: echo "ok"

  deploy:
    environment: production
    needs: 
      - valid
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: release-${{ github.ref }}
    if: ${{ github.ref_name == 'main' && github.ref_type == 'branch' }}

    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - uses: actions/download-artifact@v4
        with:
          name: deploy
          path: .

      # https://github.com/marketplace/actions/setup-chrome
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - run: ./setup.sh

      - run: make github

      - run: make build

      - run: make deploy
        env:
          CRYPTOMEDIC_DEPLOY_WEB_HOST: ${{ vars.CRYPTOMEDIC_DEPLOY_WEB_HOST }}
          CRYPTOMEDIC_DEPLOY_WEB_PORT: ${{ vars.CRYPTOMEDIC_DEPLOY_WEB_PORT }}
          CRYPTOMEDIC_DEPLOY_WEB_TOKEN: ${{ secrets.CRYPTOMEDIC_DEPLOY_WEB_TOKEN }}

          CRYPTOMEDIC_DEPLOY_FILES_HOST: ${{ vars.CRYPTOMEDIC_DEPLOY_FILES_HOST }}
          CRYPTOMEDIC_DEPLOY_FILES_USER: ${{ vars.CRYPTOMEDIC_DEPLOY_FILES_USER }}
          CRYPTOMEDIC_DEPLOY_FILES_PASSWORD: ${{ secrets.CRYPTOMEDIC_DEPLOY_FILES_PASSWORD }}


      - name: Upload deploy.log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deploy.log
          path: tmp/deploy.log
