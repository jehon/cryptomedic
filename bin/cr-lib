#!/usr/bin/env bash

set -o errexit
set -o pipefail

export CR_SCRIPT_DIR
export CR_PRJ_DIR
export CR_TMP
export CR_REL_PATH
export SSH_KNOWN_HOSTS="$HOME/.ssh/known_hosts"

export DEBIAN_FRONTEND=noninteractive

#
# Initialize
#
CR_SCRIPT_DIR="$(realpath "$(dirname "${BASH_SOURCE[0]}")")"
CR_PRJ_DIR="$(dirname "$CR_SCRIPT_DIR")"
CR_TMP="$CR_PRJ_DIR/tmp"

CR_REL_PATH="$(realpath --relative-to "$CR_PRJ_DIR" "$(pwd)")"

export PATH="$CR_SCRIPT_DIR:$PATH"

# For recursion
export CR_HEADER_PREFIX="*$CR_HEADER_PREFIX"

cr_curl() {
    curl -fsSL --user-agent firefox "$@"
}

jh_color() {
    COLOR=${1:-"0"}
    if [ -z "$JH_DAEMON" ]; then
        echo -en "\e[${COLOR}m"
    fi
}

header_message() {
    if [ -n "$QUIET" ]; then
        return
    fi
    jh_color 93
    echo -n "$CR_HEADER_PREFIX $*"
    jh_color
    echo
}

header_begin() {
    LASTMSG="$*"
    header_message "$*..."
}

header_end() {
    header_message "$LASTMSG done"
}

with_header() {
    H="$1"
    shift
    header_begin "$H ($*)"
    "$@"
    header_end
}

progress() {
    if [ -n "$QUIET" ]; then
        return
    fi
    if [ -n "$1" ]; then
        echo -n "$1"
    else
        echo -n "."
    fi
}

declare -a CR_DOCKER_ARGS=( )
export CR_DOCKER_ARGS
CR_DOCKER_ARGS+=( "--user" "$(id -u)" )

declare -a CR_DOCKER_ARGS_RUN=( "--rm" "--quiet-pull" "--no-TTY" "--interactive=false" "--no-deps" )
CR_DOCKER_ARGS_RUN+=( "${CR_DOCKER_ARGS[@]}" )
export CR_DOCKER_ARGS_RUN
