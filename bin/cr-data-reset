#!/usr/bin/env bash

set -e

. cr-lib

cr-ensure-started

# Live folder
header "data-reset: reset files..."
docker-compose run --rm dev \
    rsync -a --delete live-for-test/ live/
cr-fix-permissions "live/"
header_finished

# Reset database
header "data-reset: reset the database..."
docker-compose exec -T mysql \
    bash -c "while ! mysql -u root -p${DBROOTPASS} --database=mysql -e 'Show tables;' &>/dev/null; do sleep 1; done"
header "data-reset: build up the schema..."
docker-compose exec -T mysql \
    mysql -u root "-p${DBROOTPASS}" --database=mysql -e " \
            USE mysql; \
            DROP SCHEMA IF EXISTS ${DBNAME} ; \
            CREATE SCHEMA ${DBNAME}; \
            USE ${DBNAME}; \
            GRANT ALL PRIVILEGES ON ${DBNAME}   TO ${DBUSER}; \
            GRANT ALL PRIVILEGES ON ${DBNAME}.* TO ${DBUSER}; \
            SET PASSWORD FOR ${DBUSER} = PASSWORD('${DBPASS}'); \
        "
# Mysql 5.7, 7.0:
# 	ALTER USER 'root' IDENTIFIED WITH mysql_native_password BY 'password';
# 	ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
header "data-reset: restore backup..."
docker-compose exec -T mysql \
    mysql -u root "-p${DBROOTPASS}" --database="${DBNAME}" < "conf/database/base.sql"
header_finished

ensure_folder_empty() {
  	rm -fr "$1"
	mkdir -p "$1"
    chmod 777 "$1"
}

header "empty folders..."
ensure_folder_empty "www/api/${VAPI}/bootstrap/cache/"
# ensure_folder_empty "www/api/${VAPI}/app/public"
ensure_folder_empty "www/api/${VAPI}/storage/framework/cache"
ensure_folder_empty "www/api/${VAPI}/storage/framework/cache/data"
ensure_folder_empty "www/api/${VAPI}/storage/framework/sessions"
ensure_folder_empty "www/api/${VAPI}/storage/framework/views"
ensure_folder_empty "www/api/${VAPI}/storage/logs/"
# touch www/api/${VAPI}/storage/logs/laravel.log
header_finished

header "data-reset: refresh structure..."
cryptomedic-refresh-structure.sh
cr-fix-permissions
header_finished
