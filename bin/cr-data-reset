#!/usr/bin/env bash

set -o errexit
set -o pipefail

CR_SCRIPT_DIR="$(dirname "${BASH_SOURCE[0]}")"

# shellcheck source=./cr-lib
. "$CR_SCRIPT_DIR"/cr-lib

cr-ensure-started

# Live folder
header "data-reset..."
cr-capture-output cr-docker-compose-run dev \
    rsync -a --delete live-for-test/ live/
cr-capture-output cr-fix-permissions "live/"
chmod -R a+rwX live/storage/uploadedPictures

# Reset database
header "Waiting for mysql to be available"
cr-capture-output docker compose exec -T mysql \
    bash -c "while ! mysql -u root -p${CR_DB_ROOT_PASS} --database=mysql -e 'Show tables;' &>/dev/null; do sleep 1; done"
header_finished

cr-capture-output docker compose exec -T mysql \
    mysql -u root "-p${CR_DB_ROOT_PASS}" --database=mysql -e " \
            USE mysql; \
            DROP SCHEMA IF EXISTS ${CR_DB_NAME} ; \
            CREATE SCHEMA ${CR_DB_NAME}; \
            USE ${CR_DB_NAME}; \
            GRANT ALL PRIVILEGES ON ${CR_DB_NAME}   TO ${CR_DB_USER}; \
            GRANT ALL PRIVILEGES ON ${CR_DB_NAME}.* TO ${CR_DB_USER}; \
            SET PASSWORD FOR ${CR_DB_USER} = PASSWORD('${CR_DB_USER_PASS}'); \
        "
# Mysql 5.7, 7.0:
# 	ALTER USER 'root' IDENTIFIED WITH mysql_native_password BY 'password';
# 	ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
cr-capture-output docker compose exec -T mysql \
    mysql -u root "-p${CR_DB_ROOT_PASS}" --database="${CR_DB_NAME}" <"conf/database/base.sql"

cr-ensure-folder-empty "www/api/${VAPI}/bootstrap/cache/"
# cr-ensure-folder-empty "www/api/${VAPI}/app/public"
cr-ensure-folder-empty "www/api/${VAPI}/storage/framework/cache"
cr-ensure-folder-empty "www/api/${VAPI}/storage/framework/cache/data"
cr-ensure-folder-empty "www/api/${VAPI}/storage/framework/sessions"
cr-ensure-folder-empty "www/api/${VAPI}/storage/framework/views"
cr-ensure-folder-empty "www/api/${VAPI}/storage/logs/"
cr-ensure-folder-empty "tmp/webTemp/cache"
# touch www/api/${VAPI}/storage/logs/laravel.log

cr-capture-output cr-refresh-structure
cr-fix-permissions

header_finished
