#!/usr/bin/env bash

set -o errexit
set -o pipefail

# shellcheck source-path=SCRIPTDIR
. "$(dirname "${BASH_SOURCE[0]}")"/cr-lib

make build

DRY_RUN="--dry-run"
if [ "$1" == "commit" ]; then
	echo "*** Commiting really ***"
	DRY_RUN=
	shift
fi

if [ -n "$1" ]; then
	PART="${1%/}/"
fi

LOCAL_MOUNT="$(realpath tmp/remote)"

header_begin "Dump infos"
echo "CRYPTOMEDIC_DEV_HTTP_PORT:          ${CRYPTOMEDIC_DEV_HTTP_PORT}"
echo "CRYPTOMEDIC_DEPLOY_WEB_HOST:        ${CRYPTOMEDIC_DEPLOY_WEB_HOST}"
echo "CRYPTOMEDIC_DEPLOY_WEB_PORT:        ${CRYPTOMEDIC_DEPLOY_WEB_PORT}"
echo "CRYPTOMEDIC_DEPLOY_FILES_HOST:     '${CRYPTOMEDIC_DEPLOY_FILES_HOST}'"
echo "CRYPTOMEDIC_DEPLOY_FILES_USER:       ${#CRYPTOMEDIC_DEPLOY_FILES_USER} characters"
echo "CRYPTOMEDIC_DEPLOY_FILES_PASSWORD:   ${#CRYPTOMEDIC_DEPLOY_FILES_PASSWORD} characters"
echo "LOCAL_MOUNT:                        ${LOCAL_MOUNT}"
echo ""
echo "DRY_RUN:                            ${DRY_RUN}"
echo "PART:                               ${PART}"
header_end

if [ -z "$CRYPTOMEDIC_DEPLOY_FILES_USER" ]; then
	echo "No CRYPTOMEDIC_DEPLOY_FILES_USER. Did you forget something?" >&2
	exit 1
fi

generate_sync_command() {
	F="${1%%/}"
	echo -n "mirror ${DRY_RUN} --verbose" \
		"--parallel=5" \
		"--reverse --delete --no-perms " \
		"-x tmp -x bin -x test -x tests -x Tmp -x Temp -x '.+\.log'" \
		"$F $F"
}

header_begin "Cleaning local"
find . -type d -empty -delete
cr-ensure-folder-empty "www/api/bootstrap/cache/"
header_end

header_begin "Syncing (DRY_RUN = ${DRY_RUN} PART = ${PART})"

(
	# Note: See "Cleaning local" above for managed exclusions
	cat <<EOS
    $(generate_sync_command "") --file=.ovhconfig;
    $(generate_sync_command "www/");
    quit
EOS
) | cr_lftp "sftp://${CRYPTOMEDIC_DEPLOY_FILES_USER}:${CRYPTOMEDIC_DEPLOY_FILES_PASSWORD}@${CRYPTOMEDIC_DEPLOY_FILES_HOST}"

header_end

echo "✔ Synced"

sleep 2

header_begin "Refreshing structure"
"$CR_SCRIPT_DIR/"cr-refresh-structure "http://${CRYPTOMEDIC_DEPLOY_WEB_HOST}:${CRYPTOMEDIC_DEPLOY_WEB_PORT}" "${CRYPTOMEDIC_DEPLOY_WEB_TOKEN}"
header_end

echo "✔ Done"
