#!/usr/bin/env bash

set -o errexit
set -o pipefail

# shellcheck source=./cr-lib
. "$(dirname "${BASH_SOURCE[0]}")"/cr-lib

make build

DRY_RUN="-n"
if [ "$1" == "commit" ]; then
    echo "*** Commiting really ***"
    DRY_RUN=
    shift
fi

if [ -n "$1" ]; then
    PART="${1%/}/"
fi

LOCAL_MOUNT="$( realpath tmp/remote )"

header_begin "Dump infos"
echo "CRYPTOMEDIC_LOCAL_HTTP_PORT:        ${CRYPTOMEDIC_LOCAL_HTTP_PORT}"
echo "CRYPTOMEDIC_DEPLOY_WEB_HOST:        ${CRYPTOMEDIC_DEPLOY_WEB_HOST}"
echo "CRYPTOMEDIC_DEPLOY_WEB_PORT:        ${CRYPTOMEDIC_DEPLOY_WEB_PORT}"
echo "CRYPTOMEDIC_DEPLOY_FILES_HOST:     '${CRYPTOMEDIC_DEPLOY_FILES_HOST}'"
echo "CRYPTOMEDIC_DEPLOY_FILES_USER:       ${#CRYPTOMEDIC_DEPLOY_FILES_USER} characters"
echo "CRYPTOMEDIC_DEPLOY_FILES_PASSWORD:   ${#CRYPTOMEDIC_DEPLOY_FILES_PASSWORD} characters"
echo "LOCAL_MOUNT:                        ${LOCAL_MOUNT}"
echo ""
echo "DRY_RUN:                            ${DRY_RUN}"
echo "PART:                               ${PART}"
header_end

if [ -z "$CRYPTOMEDIC_DEPLOY_FILES_USER" ]; then
    echo "No CRYPTOMEDIC_DEPLOY_FILES_USER. Did you forget something?" >&2
    exit 1
fi

header_begin "Cleaning local"
find . -type d -empty -delete
header_end


exiting() {
    RES=$?
    echo "Exiting"
    fusermount -u -z "${LOCAL_MOUNT}" || true
    rmdir "${LOCAL_MOUNT}" || true
    return $?
}

trap exiting EXIT SIGINT

# -o StrictHostKeyChecking=accept-new -o UpdateHostKeys=yes 

header_begin "Mounting"
mkdir -p "${LOCAL_MOUNT}"
sshpass -p"${CRYPTOMEDIC_DEPLOY_FILES_PASSWORD}" \
    sshfs "${CRYPTOMEDIC_DEPLOY_FILES_USER}@${CRYPTOMEDIC_DEPLOY_FILES_HOST}:" "${LOCAL_MOUNT}" \
    -o sshfs_sync -o StrictHostKeyChecking=accept-new -o UpdateHostKeys=yes \
    -s -f &

echo "✔ Waiting for mount to be ready"
(( I=1 ))
while [ ! -r "${LOCAL_MOUNT}"/.ovhconfig ]; do
    sleep 1s
    (( I++ ))
	if [[ "$I" -gt 20 ]]; then
		echo "waiting failed" >&2
		exit 1
	fi
done
echo "✔ Mounted"
header_end

header_begin "Syncing (DRY_RUN = ${DRY_RUN} PART = ${PART})"
rsync $DRY_RUN \
    --itemize-changes \
    --recursive --times --omit-dir-times \
    --delete \
    --include-from="${CR_PRJ_DIR}/deploy-filter" \
    "${CR_PRJ_DIR}/${PART}" \
    "${LOCAL_MOUNT}/${PART}"
header_end

echo "✔ Synced"
