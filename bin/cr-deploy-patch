#!/usr/bin/env bash

set -o errexit
set -o pipefail

# shellcheck source=./cr-lib
. "$(dirname "${BASH_SOURCE[0]}")"/cr-lib

ACTION="$1"

if [ -r /etc/jehon/restricted/cryptomedic.sh ]; then
	. /etc/jehon/restricted/cryptomedic.sh
fi

LOG="$CR_TMP/deploy.log"
mkdir -p "$CR_TMP"
REMOTE_LISTING="$CR_TMP"/deploy-remote.txt
truncate --size=0 "$LOG"
# We use this file in lftp_mkdir
truncate --size=0 "$REMOTE_LISTING"

export CRYPTOMEDIC_UPLOAD_HOST="ftp.cluster003.ovh.net"
export CRYPTOMEDIC_HTTP_HOST="www.cryptomedic.org"
export CRYPTOMEDIC_HTTP_PORT=80

export CRYPTOMEDIC_UPLOAD_USER="${CRYPTOMEDIC_UPLOAD_USER:-$JH_CRYPTOMEDIC_UPLOAD_USER}"
export CRYPTOMEDIC_UPLOAD_PASSWORD="${CRYPTOMEDIC_UPLOAD_PASSWORD:-$JH_CRYPTOMEDIC_UPLOAD_PASSWORD}"
export CRYPTOMEDIC_DB_UPGRADE="${CRYPTOMEDIC_DB_UPGRADE:-$JH_CRYPTOMEDIC_DB_UPGRADE}"

if [ -z "$CRYPTOMEDIC_UPLOAD_USER" ]; then
	echo "Missing CRYPTOMEDIC_UPLOAD_USER" >&2
	exit 255
fi

if [ -z "$CRYPTOMEDIC_UPLOAD_PASSWORD" ]; then
	echo "Missing CRYPTOMEDIC_UPLOAD_PASSWORD" >&2
	exit 255
fi

if [ -z "$CRYPTOMEDIC_DB_UPGRADE" ]; then
	echo "Missing CRYPTOMEDIC_DB_UPGRADE" >&2
	exit 255
fi

# Create a "3"rd out where all structured messages will go
# This allow us to capture stdout and stderr everywhere,
# while still letting passing through the messages "Success / failure / ..."
exec 3>&1

ftp_exec_raw() {
	tee -a "$LOG" | ftp "ftp://${CRYPTOMEDIC_UPLOAD_USER}:${CRYPTOMEDIC_UPLOAD_PASSWORD}@${CRYPTOMEDIC_UPLOAD_HOST}" 2>&1 | tee -a "$LOG"
}

ftp_exec() {
	ftp_exec_raw |
		grep -v "SFTP protocol" |
		grep -v "Connected to" |
		grep -v "Couldn't create directory" |
		grep -v "remote mkdir .*: Failure" |
		(grep -v "^sftp" || [[ $? == 1 ]]) |
		while read -r R; do
			echo "$R"
			if [[ "$R" =~ "No such file or directory" ]]; then
				echo "Problem uploading file" >&2
				return 1
			fi
		done
	echo "**********" >>"$LOG"
}

ftp_mkdir() {
	if [ "$1" = "." ]; then
		return
	fi

	if [ -r "$REMOTE_LISTING" ]; then
		if grep ": /$1" "$REMOTE_LISTING" >/dev/null 2>&1; then
			echo "# mkdir $1: already exists"
			# It already exists (there is a file in it)
			return
		fi
	fi

	ftp_mkdir "$(dirname "$1")"
	echo "mkdir \"$1\""
}

ftp_put() {
	ftp_mkdir "$(dirname "$1")"
	echo "put \"$1\" \"$1\""
}

ftp_rm() {
	echo "rm \"$1\""
}

header_begin "Dump infos"
echo "CRYPTOMEDIC_UPLOAD_HOST: '${CRYPTOMEDIC_UPLOAD_HOST}'"
echo "CRYPTOMEDIC_UPLOAD_USER: ${#CRYPTOMEDIC_UPLOAD_USER} characters"
echo "CRYPTOMEDIC_UPLOAD_PASSWORD: ${#CRYPTOMEDIC_UPLOAD_PASSWORD} characters"
header_end

header_begin "Testing connectivity"
echo "ls" |  ftp_exec_raw
header_end

echo ""
header_begin "Updating md5sum.php script [for real]"
(
	ftp_put www/maintenance/md5sum.php
	ftp_put deploy-filter
) | ftp_exec
header_end

header_begin "Getting the md5 from local"
curl -fsSL "http://localhost:$CR_HTTP_PORT/maintenance/md5sum.php?filter=local" >"$CR_TMP"/deploy-local.txt
header_end

header_begin "Sorting local file"
sort --stable "$CR_TMP"/deploy-local.txt >"$CR_TMP"/deploy-local.sorted.txt
header_end

header_begin "Getting the md5 from remote"
curl -fsSL "http://www.cryptomedic.org/maintenance/md5sum.php?filter=remote" >"$REMOTE_LISTING"
header_end

header_begin "Sorting remote file"
sort --stable "$REMOTE_LISTING" >"$CR_TMP"/deploy-remote.sorted.txt
header_end

if diff -q "$CR_TMP"/deploy-remote.sorted.txt "$CR_TMP"/deploy-local.sorted.txt; then
	echo "No diff found"
else
	header_begin "Building the diff"
	{
		diff -u "$CR_TMP"/deploy-remote.sorted.txt "$CR_TMP"/deploy-local.sorted.txt || true
	} | tee "$CR_TMP"/deploy-diff-1-raw.txt |
		grep -e "^[+-]" | grep -v "^+++" | grep -v "^---" | tee "$CR_TMP"/deploy-diff-2-filtered.txt |
		cut -c 1,13- | tee "$CR_TMP"/deploy-diff-3-changed.txt |
		LC_ALL=POSIX sort -k1.2 -k1.1r | tee "$CR_TMP"/deploy-diff-4-sorted.txt |
		{
			while read -r lfile; do
				file="${lfile:1}"
				if [ "${lfile:0:1}" == "+" ]; then
					ftp_put "$file"
				else
					ftp_rm "$file"
				fi
			done
		} >"$CR_TMP"/deploy-diff-5-sftp-commands.txt
	header_end

	if [ -r "$CR_TMP"/deploy-diff-4-sorted.txt ]; then
		echo "-------------- Differences --------------"
		echo "-------------- Differences --------------"
		echo "-------------- Differences --------------"
		cat "$CR_TMP"/deploy-diff-4-sorted.txt
		echo "-------------- Differences --------------"
		echo "-------------- Differences --------------"
		echo "-------------- Differences --------------"

		if [ "$ACTION" == "commit" ]; then
			header_begin "Commiting"
			ftp_exec <"$CR_TMP"/deploy-diff-5-sftp-commands.txt
			header_end
		else
			echo "!!!!!!!!!!!!!!!!!!! TEST MODE !!!!!!!!!!!!!!!!!!!!!!"
			echo "!!!!!!!!!!!!!!!!!!! TEST MODE !!!!!!!!!!!!!!!!!!!!!!"
			echo "!!!!!!!!!!!!!!!!!!! TEST MODE !!!!!!!!!!!!!!!!!!!!!!"
			cat "$CR_TMP"/deploy-diff-5-sftp-commands.txt
			echo "!!!!!!!!!!!!!!!!!!! TEST MODE !!!!!!!!!!!!!!!!!!!!!!"
			echo "!!!!!!!!!!!!!!!!!!! TEST MODE !!!!!!!!!!!!!!!!!!!!!!"
			echo "!!!!!!!!!!!!!!!!!!! TEST MODE !!!!!!!!!!!!!!!!!!!!!!"
			echo ""
			echo "To really commit, use:"
			echo "$0 commit"
			echo ""
		fi
	fi
fi

sleep 2

header_begin "Refreshing structure"
"$CR_SCRIPT_DIR/"cr-refresh-structure
header_end

echo "*** End ***"
