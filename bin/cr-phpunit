#!/usr/bin/env bash

set -o errfail

CR_SCRIPT_DIR="$(dirname "${BASH_SOURCE[0]}")"

# shellcheck source=./cr-lib
. "$CR_SCRIPT_DIR"/cr-lib

cr-ensure-started

# Test install of php-xdebug
# php -i | grep xdebug
# apt update && apt install php-xdebug

mkdir -m 777 -p tmp

if [ "$1" == "COMMIT" ]; then
	echo "Setting COMMIT"
	export COMMIT=1
	shift
fi

testOne() {
	local T="$1" # type: laravel/bare/-
	local V="$2" # www/api/v1.3
	shift
	shift

	echo "Version $V"

	if [[ -z "$T" ]] || [[ "$T" == "laravel" ]]; then
		if [ -f "$V/phpunit.xml" ]; then
			REPORTS="tmp/php$(basename "$V")"
			mkdir -p "$REPORTS"
			chmod a+rwx "$REPORTS"

			header "PHPUnit: Laravel $V starting"
			docker-compose run --rm -T --workdir "/app/$V" -e XDEBUG_MODE=coverage -e COMMIT="$COMMIT" \
				"php" \
				./vendor/bin/phpunit --coverage-html "/app/$REPORTS" --coverage-xml "/app/$REPORTS" "$@"
			cr-fix-permissions "$REPORTS"
			header_finished
		else
			echo "** Laravel $V: skipping because no phpunit.xml **" >&2
			pwd
		fi
	fi

	if [[ -z "$T" ]] || [[ "$T" == "bare" ]]; then
		if [ -f "$V/public/phpunit.xml" ]; then
			REPORTS="tmp/php$(basename "$V")-bare"
			mkdir -p "$REPORTS"
			chmod a+rwx "$REPORTS"

			header "PHPUnit: Bare $V starting"
			docker-compose run --rm -T --workdir "/app/$V/public" -e XDEBUG_MODE=coverage -e COMMIT="$COMMIT" \
				"php" \
				./vendor/bin/phpunit --coverage-html "/app/$REPORTS" --coverage-xml "/app/$REPORTS" "$@"
			cr-fix-permissions "$REPORTS"
			header_finished
		else
			echo "** Bare $V: skipping because no phpunit.xml **" >&2
			pwd
		fi
	fi
}

# 1: type (laravel/bare)
# 2: version
T="$1"
V="$2"
shift || true # If arg is missing, do not fail...
shift || true # If arg is missing, do not fail...

if [ -n "$T" ]; then
	if [[ -z "$V" ]]; then
		for Vi in www/api/v*; do
			testOne "$T" "$Vi"
		done
	else
		testOne "$T" "$V"
	fi
else
	if [[ -z "$V" ]]; then
		for Vi in www/api/v*; do
			testOne "" "$Vi"
		done
	else
		testOne "" "$V"
	fi
fi
